{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\project\\\\3-six\\\\src\\\\components\\\\button\\\\button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from './button.styles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_TYPE_CLASSES = {\n  google: 'google-sign-in',\n  inverted: 'inverted',\n  base: 'base'\n};\n\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\n\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button-container ${BUTTON_TYPE_CLASSES[buttonType]}`,\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPE_CLASSES","google","inverted","base","getButton","buttonType","Button","children","otherProps","CustomButton"],"sources":["C:/Users/Admin/project/3-six/src/components/button/button.component.jsx"],"sourcesContent":["import {BaseButton,\r\n        GoogleSignInButton,\r\n        InvertedButton } \r\n    from './button.styles.jsx';\r\n\r\nconst BUTTON_TYPE_CLASSES = {\r\n    google: 'google-sign-in',\r\n    inverted : 'inverted',\r\n    base: 'base',\r\n}\r\n\r\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => \r\n    ({\r\n        [BUTTON_TYPE_CLASSES.base]: BaseButton,\r\n        [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\r\n        [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\r\n    }[buttonType]);\r\n\r\n\r\nconst Button = ({children, buttonType,...otherProps}) => {\r\n    const CustomButton = getButton(buttonType)\r\n    return (\r\n        <button className={`button-container ${BUTTON_TYPE_CLASSES[buttonType]}`}\r\n        {...otherProps}\r\n          >\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;"],"mappings":";AAAA,SAAQA,UAAR,EACQC,kBADR,EAEQC,cAFR,QAGS,qBAHT;;AAKA,MAAMC,mBAAmB,GAAG;EACxBC,MAAM,EAAE,gBADgB;EAExBC,QAAQ,EAAG,UAFa;EAGxBC,IAAI,EAAE;AAHkB,CAA5B;;AAMA,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAD,uEAAcL,mBAAmB,CAACG,IAAlC;EAAA,OACb;IACG,CAACH,mBAAmB,CAACG,IAArB,GAA4BN,UAD/B;IAEG,CAACG,mBAAmB,CAACC,MAArB,GAA8BH,kBAFjC;IAGG,CAACE,mBAAmB,CAACE,QAArB,GAAgCH;EAHnC,EAICM,UAJD,CADa;AAAA,CAAlB;;AAQA,MAAMC,MAAM,GAAG,QAA0C;EAAA,IAAzC;IAACC,QAAD;IAAWF,UAAX;IAAsB,GAAGG;EAAzB,CAAyC;EACrD,MAAMC,YAAY,GAAGL,SAAS,CAACC,UAAD,CAA9B;EACA,oBACI;IAAQ,SAAS,EAAG,oBAAmBL,mBAAmB,CAACK,UAAD,CAAa,EAAvE;IAAA,GACIG,UADJ;IAAA,UAGKD;EAHL;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CATD;;KAAMD,M;AAWN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}