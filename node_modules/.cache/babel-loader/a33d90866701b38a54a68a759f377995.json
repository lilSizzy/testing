{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, getDocs, query } from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA1o6CIWpkCOi3oNJMLzREkMNC0yeDCGiM\",\n  authDomain: \"six-cloth.firebaseapp.com\",\n  projectId: \"six-cloth\",\n  storageBucket: \"six-cloth.appspot.com\",\n  messagingSenderId: \"739892687116\",\n  appId: \"1:739892687116:web:54344016455cc1f1cc1929\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth(); //xác nhận tài khoản = method getAuth và gán cho auth\n\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore(); // gán dữ liệu vô db (database)\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db); // truyền vào database \n\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapShot = await getDocs(q);\n  const categoryMap = querySnapShot.docs.reduce((acc, docSnapShot) => {\n    const {\n      title,\n      items\n    } = docSnapShot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid); // Tạo Document trong database , userDocRef sẽ là database\n\n  console.log(userDocRef);\n  const userSnapShot = await getDoc(userDocRef); // Truy xuất dữ liệu trong database \n\n  console.log(userSnapShot);\n  console.log(userSnapShot.exists()); //kiểm tra nếu dữ liệu này có trong database hay không\n\n  if (!userSnapShot.exists()) {\n    //Nếu userSnapshot k tồn tại\n    const {\n      displayName,\n      email\n    } = userAuth; // tạo 1 biến chứa displayname và email lấy từ userAuth\n\n    const createdAt = new Date(); // gán ngày tạo vào createdAt\n\n    try {\n      // setDoc (database , { hiển thị những dữ liệu gì (displayName, email , createdAt) })\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      // nếu có lỗi thì\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","getDocs","query","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapShot","categoryMap","docs","reduce","acc","docSnapShot","items","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapShot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["C:/Users/Admin/project/3-six/src/useful/fireBase/filebase.useful.js"],"sourcesContent":["import {initializeApp } from 'firebase/app';\r\nimport { \r\n    getAuth,\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    signOut,\r\n    onAuthStateChanged,\r\n} from 'firebase/auth';\r\nimport {\r\n    getFirestore,\r\n    doc,\r\n    getDoc,\r\n    setDoc,\r\n    collection,\r\n    writeBatch,\r\n    getDocs,\r\n    query,\r\n} from 'firebase/firestore'\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA1o6CIWpkCOi3oNJMLzREkMNC0yeDCGiM\",\r\n  authDomain: \"six-cloth.firebaseapp.com\",\r\n  projectId: \"six-cloth\",\r\n  storageBucket: \"six-cloth.appspot.com\",\r\n  messagingSenderId: \"739892687116\",\r\n  appId: \"1:739892687116:web:54344016455cc1f1cc1929\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({\r\n    prompt: \"select_account\"\r\n});\r\n\r\nexport const auth = getAuth(); //xác nhận tài khoản = method getAuth và gán cho auth\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth,provider);\r\n\r\nexport const db = getFirestore(); // gán dữ liệu vô db (database)\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = collection (db,collectionKey); \r\n    const batch = writeBatch(db); // truyền vào database \r\n\r\n    objectsToAdd.forEach((object) => {\r\n        const docRef = doc(collectionRef, object.title.toLowerCase());\r\n        batch.set(docRef,object);\r\n    });\r\n    await batch.commit();\r\n    console.log('done');\r\n};\r\n\r\nexport const getCategoriesAndDocuments = async () => {\r\n    const collectionRef = collection(db,'categories');\r\n    const q = query(collectionRef);\r\n\r\n    const querySnapShot = await getDocs(q);\r\n    const categoryMap = querySnapShot.docs.reduce((acc,docSnapShot) => {\r\n        const {title,items} = docSnapShot.data();\r\n        acc[title.toLowerCase()] = items;\r\n        return acc;\r\n    },{});\r\n    return categoryMap;\r\n}\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n    userAuth,\r\n    additionalInformation = {} \r\n) => {\r\n    if(!userAuth) return;\r\n    \r\n    const userDocRef = doc(db, 'users', userAuth.uid); // Tạo Document trong database , userDocRef sẽ là database\r\n    \r\n    console.log(userDocRef);\r\n\r\n    const userSnapShot = await getDoc(userDocRef); // Truy xuất dữ liệu trong database \r\n    console.log(userSnapShot);\r\n    console.log(userSnapShot.exists()); //kiểm tra nếu dữ liệu này có trong database hay không\r\n\r\n    if(!userSnapShot.exists()) { //Nếu userSnapshot k tồn tại\r\n        const {displayName,email } = userAuth; // tạo 1 biến chứa displayname và email lấy từ userAuth\r\n        const createdAt = new Date(); // gán ngày tạo vào createdAt\r\n        try{ // setDoc (database , { hiển thị những dữ liệu gì (displayName, email , createdAt) })\r\n            await setDoc(userDocRef,{\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalInformation,\r\n            });\r\n        } catch (error) { // nếu có lỗi thì\r\n            console.log('error creating the user', error.message); \r\n        }\r\n    }\r\n    return userDocRef;\r\n}\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email,password) => {\r\n if (!email || !password) return;\r\n    \r\n    return await createUserWithEmailAndPassword(auth,email,password);\r\n}\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email,password) => {\r\n if (!email || !password) return;\r\n    \r\n    return await signInWithEmailAndPassword(auth,email,password);\r\n}\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth,callback);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}